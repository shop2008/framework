/*
 * Generated code, don't modified !
 */
package com.wxxr.mobile.stock.client.bean;

import java.util.List;
import com.wxxr.mobile.core.bean.api.IBindableBean;
import com.wxxr.mobile.core.bean.api.ListDecorator;
import com.wxxr.mobile.core.bean.api.PropertyChangeListener;
import com.wxxr.mobile.core.bean.api.PropertyChangeSupport;

/**
 * Generated by Bindable Bean generator
 *
 */
public class MyArticlesBean implements IBindableBean {
	
	private final PropertyChangeSupport emitter = new PropertyChangeSupport(this);
	private List<ArticleBean> helpArticles;
	private List<ArticleBean> homeArticles;

	/**
	 * @param listener
	 */
	public void addPropertyChangeListener(PropertyChangeListener listener) {
		emitter.addPropertyChangeListener(listener);
	}

	/**
	 * @param listener
	 */
	public void removePropertyChangeListener(PropertyChangeListener listener) {
		emitter.removePropertyChangeListener(listener);
	}

	/**
	 * @param propertyName
	 * @param listener
	 */
	public void addPropertyChangeListener(String propertyName,
			PropertyChangeListener listener) {
		emitter.addPropertyChangeListener(propertyName, listener);
	}

	/**
	 * @param propertyName
	 * @param listener
	 */
	public void removePropertyChangeListener(String propertyName,
			PropertyChangeListener listener) {
		emitter.removePropertyChangeListener(propertyName, listener);
	}


	/**
	 * @return the helpArticles
	 */
	public List<ArticleBean> getHelpArticles() {
		return (helpArticles instanceof ListDecorator) ? ((ListDecorator<ArticleBean>)this.helpArticles).getData() : helpArticles;
	}

	/**
	 * @param helpArticles the helpArticles to set
	 */
	public void setHelpArticles(List<ArticleBean> helpArticles) {
		List<ArticleBean> old = this.helpArticles;
		this.helpArticles = helpArticles;
		if(this.helpArticles != null){
			this.helpArticles = new ListDecorator<ArticleBean>("helpArticles", this.emitter,this.helpArticles);
		}
		this.emitter.firePropertyChange("helpArticles", old, this.helpArticles);
	}

	/**
	 * @return the homeArticles
	 */
	public List<ArticleBean> getHomeArticles() {
		return (homeArticles instanceof ListDecorator) ? ((ListDecorator<ArticleBean>)this.homeArticles).getData() : homeArticles;
	}

	/**
	 * @param homeArticles the homeArticles to set
	 */
	public void setHomeArticles(List<ArticleBean> homeArticles) {
		List<ArticleBean> old = this.homeArticles;
		this.homeArticles = homeArticles;
		if(this.homeArticles != null){
			this.homeArticles = new ListDecorator<ArticleBean>("homeArticles", this.emitter,this.homeArticles);
		}
		this.emitter.firePropertyChange("homeArticles", old, this.homeArticles);
	}

    /* (non-Javadoc)
     * @see java.lang.Object#toString()
     */
    @Override   
    public String toString() {
        return "MyArticlesBean ["+
                "helpArticles=" + this.helpArticles +
                " , homeArticles=" + this.homeArticles +
        "]";
    }	

}
