/*
 * Generated code, don't modified !
 */
package com.wxxr.mobile.stock.app.bean;

import java.util.List;
import com.wxxr.mobile.core.ui.common.ListDecorator;
import com.wxxr.mobile.core.bean.api.IBindableBean;
import com.wxxr.mobile.core.bean.api.IPropertyChangeListener;
import com.wxxr.mobile.core.ui.common.BindableBeanSupport;

/**
 * Generated by Bindable Bean generator
 *
 */
public class StockMinuteKBean implements IBindableBean {
	
	private final BindableBeanSupport emitter = new BindableBeanSupport(this);
	private String market;
	private List<StockMinuteLineBean> list;
	private String code;
	private String date;
	private String close;
	private boolean stop;

	/**
	 * @param listener
	 */
	public void addPropertyChangeListener(IPropertyChangeListener listener) {
		emitter.addPropertyChangeListener(listener);
	}

	/**
	 * @param listener
	 */
	public void removePropertyChangeListener(IPropertyChangeListener listener) {
		emitter.removePropertyChangeListener(listener);
	}



	/**
	 * @return the market
	 */
	public String getMarket() {
		return market;
	}

	/**
	 * @param market the market to set
	 */
	public void setMarket(String market) {
		String old = this.market;
		this.market = market;
		this.emitter.firePropertyChange("market", old, this.market);
	}

	/**
	 * @return the list
	 */
	public List<StockMinuteLineBean> getList() {
		return list;
	}

	/**
	 * @param list the list to set
	 */
	public void setList(List<StockMinuteLineBean> list) {
		List<StockMinuteLineBean> old = this.list;
		this.list = list;
		if(this.list != null){
            this.list = new ListDecorator<StockMinuteLineBean>("list", this.emitter,this.list);
        }
		this.emitter.firePropertyChange("list", old, this.list);
	}

	/**
	 * @return the code
	 */
	public String getCode() {
		return code;
	}

	/**
	 * @param code the code to set
	 */
	public void setCode(String code) {
		String old = this.code;
		this.code = code;
		this.emitter.firePropertyChange("code", old, this.code);
	}

	/**
	 * @return the date
	 */
	public String getDate() {
		return date;
	}

	/**
	 * @param date the date to set
	 */
	public void setDate(String date) {
		String old = this.date;
		this.date = date;
		this.emitter.firePropertyChange("date", old, this.date);
	}

	/**
	 * @return the close
	 */
	public String getClose() {
		return close;
	}

	/**
	 * @param close the close to set
	 */
	public void setClose(String close) {
		String old = this.close;
		this.close = close;
		this.emitter.firePropertyChange("close", old, this.close);
	}

    /* (non-Javadoc)
     * @see java.lang.Object#toString()
     */


	@Override
	public String toString() {
		return "StockMinuteKBean [market=" + market + ", list=" + list
				+ ", code=" + code + ", date=" + date + ", close=" + close
				+ ", stop=" + stop + "]";
	}



	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((close == null) ? 0 : close.hashCode());
		result = prime * result + ((code == null) ? 0 : code.hashCode());
		result = prime * result + ((date == null) ? 0 : date.hashCode());
		result = prime * result + ((list == null) ? 0 : list.hashCode());
		result = prime * result + ((market == null) ? 0 : market.hashCode());
		result = prime * result + (stop ? 1231 : 1237);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		StockMinuteKBean other = (StockMinuteKBean) obj;
		if (close == null) {
			if (other.close != null)
				return false;
		} else if (!close.equals(other.close))
			return false;
		if (code == null) {
			if (other.code != null)
				return false;
		} else if (!code.equals(other.code))
			return false;
		if (date == null) {
			if (other.date != null)
				return false;
		} else if (!date.equals(other.date))
			return false;
		if (list == null) {
			if (other.list != null)
				return false;
		} else if (!list.equals(other.list))
			return false;
		if (market == null) {
			if (other.market != null)
				return false;
		} else if (!market.equals(other.market))
			return false;
		if (stop != other.stop)
			return false;
		return true;
	}

	public boolean getStop() {
		return stop;
	}

	public void setStop(boolean stop) {
		boolean old = this.stop;
		this.stop = stop;
		this.emitter.firePropertyChange("stop", old, this.stop);
	}	
}
