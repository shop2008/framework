/*
 * Generated code, don't modified !
 */
package com.wxxr.mobile.stock.app.bean;

import java.util.List;
import com.wxxr.mobile.core.ui.common.ListDecorator;
import com.wxxr.mobile.core.bean.api.IBindableBean;
import com.wxxr.mobile.core.bean.api.IPropertyChangeListener;
import com.wxxr.mobile.core.ui.common.BindableBeanSupport;

/**
 * Generated by Bindable Bean generator
 *
 */
public class TradingAccountBean implements IBindableBean {
	
	private final BindableBeanSupport emitter = new BindableBeanSupport(this);
	private boolean virtual;
	private String maxStockCode;
	private int status;
	private float lossLimit;
	private long avalibleFee;
	private long buyDay;
	private String type;
	private List<StockTradingOrderBean> tradingOrders;
	private long usedFee;
	private long id;
	private long sellDay;
	private String over;
	private long totalGain;
	private long applyFee;
	private long frozenVol;
	private String maxStockMarket;
	private long gainRate;
	private int elapseTime;
	
	private int durationDay;//盘存续的天数
	/**
	 * @param listener
	 */
	public void addPropertyChangeListener(IPropertyChangeListener listener) {
		emitter.addPropertyChangeListener(listener);
	}

	/**
	 * @param listener
	 */
	public void removePropertyChangeListener(IPropertyChangeListener listener) {
		emitter.removePropertyChangeListener(listener);
	}



	/**
	 * @return the virtual
	 */
	public boolean getVirtual() {
		return virtual;
	}

	/**
	 * @param virtual the virtual to set
	 */
	public void setVirtual(boolean virtual) {
		boolean old = this.virtual;
		this.virtual = virtual;
		this.emitter.firePropertyChange("virtual", old, this.virtual);
	}

	/**
	 * @return the maxStockCode
	 */
	public String getMaxStockCode() {
		return maxStockCode;
	}

	public int getElapseTime() {
		return elapseTime;
	}

	public void setElapseTime(int elapseTime) {
		int old = this.elapseTime;
		this.elapseTime = elapseTime;
		this.emitter.firePropertyChange("elapseTime", old, this.elapseTime);
		
	}

	/**
	 * @param maxStockCode the maxStockCode to set
	 */
	public void setMaxStockCode(String maxStockCode) {
		String old = this.maxStockCode;
		this.maxStockCode = maxStockCode;
		this.emitter.firePropertyChange("maxStockCode", old, this.maxStockCode);
	}

	/**
	 * @return the status
	 */
	public int getStatus() {
		return status;
	}

	/**
	 * @param status the status to set
	 */
	public void setStatus(int status) {
		int old = this.status;
		this.status = status;
		this.emitter.firePropertyChange("status", old, this.status);
	}

	/**
	 * @return the lossLimit
	 */
	public float getLossLimit() {
		return lossLimit;
	}

	/**
	 * @param lossLimit the lossLimit to set
	 */
	public void setLossLimit(float lossLimit) {
		float old = this.lossLimit;
		this.lossLimit = lossLimit;
		this.emitter.firePropertyChange("lossLimit", old, this.lossLimit);
	}

	/**
	 * @return the avalibleFee
	 */
	public long getAvalibleFee() {
		return avalibleFee;
	}

	/**
	 * @param avalibleFee the avalibleFee to set
	 */
	public void setAvalibleFee(long avalibleFee) {
		long old = this.avalibleFee;
		this.avalibleFee = avalibleFee;
		this.emitter.firePropertyChange("avalibleFee", old, this.avalibleFee);
	}

	/**
	 * @return the buyDay
	 */
	public long getBuyDay() {
		return buyDay;
	}

	/**
	 * @param buyDay the buyDay to set
	 */
	public void setBuyDay(long buyDay) {
		long old = this.buyDay;
		this.buyDay = buyDay;
		this.emitter.firePropertyChange("buyDay", old, this.buyDay);
	}

	/**
	 * @return the type
	 */
	public String getType() {
		return type;
	}

	/**
	 * @param type the type to set
	 */
	public void setType(String type) {
		String old = this.type;
		this.type = type;
		this.emitter.firePropertyChange("type", old, this.type);
	}

	/**
	 * @return the tradingOrders
	 */
	public List<StockTradingOrderBean> getTradingOrders() {
		return tradingOrders;
	}

	/**
	 * @param tradingOrders the tradingOrders to set
	 */
	public void setTradingOrders(List<StockTradingOrderBean> tradingOrders) {
		List<StockTradingOrderBean> old = this.tradingOrders;
		this.tradingOrders = tradingOrders;
		if(this.tradingOrders != null){
            this.tradingOrders = new ListDecorator<StockTradingOrderBean>("tradingOrders", this.emitter,this.tradingOrders);
        }
		this.emitter.firePropertyChange("tradingOrders", old, this.tradingOrders);
	}

	/**
	 * @return the usedFee
	 */
	public long getUsedFee() {
		return usedFee;
	}

	/**
	 * @param usedFee the usedFee to set
	 */
	public void setUsedFee(long usedFee) {
		long old = this.usedFee;
		this.usedFee = usedFee;
		this.emitter.firePropertyChange("usedFee", old, this.usedFee);
	}

	/**
	 * @return the id
	 */
	public long getId() {
		return id;
	}

	/**
	 * @param id the id to set
	 */
	public void setId(long id) {
		long old = this.id;
		this.id = id;
		this.emitter.firePropertyChange("id", old, this.id);
	}

	/**
	 * @return the sellDay
	 */
	public long getSellDay() {
		return sellDay;
	}

	/**
	 * @param sellDay the sellDay to set
	 */
	public void setSellDay(long sellDay) {
		long old = this.sellDay;
		this.sellDay = sellDay;
		this.emitter.firePropertyChange("sellDay", old, this.sellDay);
	}

	/**
	 * @return the over
	 */
	public String getOver() {
		return over;
	}

	/**
	 * @param over the over to set
	 */
	public void setOver(String over) {
		String old = this.over;
		this.over = over;
		this.emitter.firePropertyChange("over", old, this.over);
	}

	/**
	 * @return the totalGain
	 */
	public long getTotalGain() {
		return totalGain;
	}

	/**
	 * @param totalGain the totalGain to set
	 */
	public void setTotalGain(long totalGain) {
		long old = this.totalGain;
		this.totalGain = totalGain;
		this.emitter.firePropertyChange("totalGain", old, this.totalGain);
	}

	/**
	 * @return the applyFee
	 */
	public long getApplyFee() {
		return applyFee;
	}

	/**
	 * @param applyFee the applyFee to set
	 */
	public void setApplyFee(long applyFee) {
		long old = this.applyFee;
		this.applyFee = applyFee;
		this.emitter.firePropertyChange("applyFee", old, this.applyFee);
	}

	/**
	 * @return the frozenVol
	 */
	public long getFrozenVol() {
		return frozenVol;
	}

	/**
	 * @param frozenVol the frozenVol to set
	 */
	public void setFrozenVol(long frozenVol) {
		long old = this.frozenVol;
		this.frozenVol = frozenVol;
		this.emitter.firePropertyChange("frozenVol", old, this.frozenVol);
	}

	/**
	 * @return the maxStockMarket
	 */
	public String getMaxStockMarket() {
		return maxStockMarket;
	}

	/**
	 * @param maxStockMarket the maxStockMarket to set
	 */
	public void setMaxStockMarket(String maxStockMarket) {
		String old = this.maxStockMarket;
		this.maxStockMarket = maxStockMarket;
		this.emitter.firePropertyChange("maxStockMarket", old, this.maxStockMarket);
	}

	/**
	 * @return the gainRate
	 */
	public long getGainRate() {
		return gainRate;
	}

	/**
	 * @param gainRate the gainRate to set
	 */
	public void setGainRate(long gainRate) {
		long old = this.gainRate;
		this.gainRate = gainRate;
		this.emitter.firePropertyChange("gainRate", old, this.gainRate);
	}

	public int getDurationDay() {
		return durationDay;
	}

	public void setDurationDay(int durationDay) {
		int old = this.durationDay;
		this.durationDay = durationDay;
		this.emitter.firePropertyChange("durationDay", old, this.durationDay);
		
	}

	@Override
	public String toString() {
		return "TradingAccountBean [virtual=" + virtual + ", maxStockCode="
				+ maxStockCode + ", status=" + status + ", lossLimit="
				+ lossLimit + ", avalibleFee=" + avalibleFee + ", buyDay="
				+ buyDay + ", type=" + type + ", tradingOrders="
				+ tradingOrders + ", usedFee=" + usedFee + ", id=" + id
				+ ", sellDay=" + sellDay + ", over=" + over + ", totalGain="
				+ totalGain + ", applyFee=" + applyFee + ", frozenVol="
				+ frozenVol + ", maxStockMarket=" + maxStockMarket
				+ ", gainRate=" + gainRate + ", elapseTime=" + elapseTime
				+ ", durationDay=" + durationDay + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (int) (applyFee ^ (applyFee >>> 32));
		result = prime * result + (int) (avalibleFee ^ (avalibleFee >>> 32));
		result = prime * result + (int) (buyDay ^ (buyDay >>> 32));
		result = prime * result + durationDay;
		result = prime * result + elapseTime;
		result = prime * result + (int) (frozenVol ^ (frozenVol >>> 32));
		result = prime * result + (int) (gainRate ^ (gainRate >>> 32));
		result = prime * result + (int) (id ^ (id >>> 32));
		result = prime * result + Float.floatToIntBits(lossLimit);
		result = prime * result
				+ ((maxStockCode == null) ? 0 : maxStockCode.hashCode());
		result = prime * result
				+ ((maxStockMarket == null) ? 0 : maxStockMarket.hashCode());
		result = prime * result + ((over == null) ? 0 : over.hashCode());
		result = prime * result + (int) (sellDay ^ (sellDay >>> 32));
		result = prime * result + status;
		result = prime * result + (int) (totalGain ^ (totalGain >>> 32));
		result = prime * result
				+ ((tradingOrders == null) ? 0 : tradingOrders.hashCode());
		result = prime * result + ((type == null) ? 0 : type.hashCode());
		result = prime * result + (int) (usedFee ^ (usedFee >>> 32));
		result = prime * result + (virtual ? 1231 : 1237);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TradingAccountBean other = (TradingAccountBean) obj;
		if (applyFee != other.applyFee)
			return false;
		if (avalibleFee != other.avalibleFee)
			return false;
		if (buyDay != other.buyDay)
			return false;
		if (durationDay != other.durationDay)
			return false;
		if (elapseTime != other.elapseTime)
			return false;
		if (frozenVol != other.frozenVol)
			return false;
		if (gainRate != other.gainRate)
			return false;
		if (id != other.id)
			return false;
		if (Float.floatToIntBits(lossLimit) != Float
				.floatToIntBits(other.lossLimit))
			return false;
		if (maxStockCode == null) {
			if (other.maxStockCode != null)
				return false;
		} else if (!maxStockCode.equals(other.maxStockCode))
			return false;
		if (maxStockMarket == null) {
			if (other.maxStockMarket != null)
				return false;
		} else if (!maxStockMarket.equals(other.maxStockMarket))
			return false;
		if (over == null) {
			if (other.over != null)
				return false;
		} else if (!over.equals(other.over))
			return false;
		if (sellDay != other.sellDay)
			return false;
		if (status != other.status)
			return false;
		if (totalGain != other.totalGain)
			return false;
		if (tradingOrders == null) {
			if (other.tradingOrders != null)
				return false;
		} else if (!tradingOrders.equals(other.tradingOrders))
			return false;
		if (type == null) {
			if (other.type != null)
				return false;
		} else if (!type.equals(other.type))
			return false;
		if (usedFee != other.usedFee)
			return false;
		if (virtual != other.virtual)
			return false;
		return true;
	}


	

   

}
