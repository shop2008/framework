/*
 * Generated code, don't modified !
 */
package com.wxxr.mobile.stock.client.view;
import java.util.List;
import java.util.Map;
import com.wxxr.mobile.android.ui.AndroidBindingType;
import com.wxxr.mobile.android.ui.IAndroidPageNavigator;
import com.wxxr.mobile.core.log.api.Trace;
import com.wxxr.mobile.core.ui.api.IMenu;
import com.wxxr.mobile.core.ui.api.IUICommand;
import com.wxxr.mobile.core.ui.api.IViewGroup;
import com.wxxr.mobile.core.ui.api.InputEvent;
import com.wxxr.mobile.core.ui.common.PageBase;
import com.wxxr.mobile.core.ui.common.AbstractUICommandHandler;
import com.wxxr.mobile.core.ui.common.SimpleNavigationDescriptor;
import com.wxxr.mobile.core.ui.common.UICommand;
import com.wxxr.mobile.core.ui.common.AttributeKeys;
import com.wxxr.mobile.core.ui.common.MenuBase;
import com.wxxr.mobile.core.ui.common.LazyLoadViewGroup;

/**
 * Generated by UI model generator
 *
 */
public class HomePageModel extends PageBase 
{
	private static final Trace log = Trace.register(HomePageModel.class);

    private IViewGroup contents;
    private IMenu leftMenu;

       
	@Override
	protected void init() {
	   initCommands();
	   initMenus();
	   initViewGroups();
    }
    
    private void initCommands(){
         AbstractUICommandHandler handler = null;
    handler = new AbstractUICommandHandler() {           
        @Override
        public String execute(InputEvent event) {
             return menuClicked(event);
        }
    };
    SimpleNavigationDescriptor navDesc = null;
    navDesc = new SimpleNavigationDescriptor().setResult("home");
    navDesc.setToView("tradingMain");
    navDesc.addParameter("p2","v2");
    navDesc.addParameter("p1","v1");
    handler.addNavigation(navDesc);
    navDesc = new SimpleNavigationDescriptor().setResult("page1");
    navDesc.setToView("tradingWinner");
    handler.addNavigation(navDesc);
    navDesc = new SimpleNavigationDescriptor().setResult("page2");
    navDesc.setToView("infoCenter");
    handler.addNavigation(navDesc);
    navDesc = new SimpleNavigationDescriptor().setResult("page3");
    navDesc.setToView("championShip");
    handler.addNavigation(navDesc);
    navDesc = new SimpleNavigationDescriptor().setResult("page4");
    navDesc.setToView("helpCenter");
    handler.addNavigation(navDesc);
    addUICommand("doNavigation", handler);
    UICommand item = null;
    item = new UICommand("home");
    item.setCommandName("doNavigation");
    item.setAttribute(AttributeKeys.title,"首页");
    item.setAttribute(AttributeKeys.icon,"resourceId:drawable/home");
    add(item);
    item = new UICommand("page1");
    item.setCommandName("doNavigation");
    item.setAttribute(AttributeKeys.title,"赚钱榜");
    item.setAttribute(AttributeKeys.icon,"resourceId:drawable/zpb");
    add(item);
    item = new UICommand("page2");
    item.setCommandName("doNavigation");
    item.setAttribute(AttributeKeys.title,"行情中心");
    item.setAttribute(AttributeKeys.icon,"resourceId:drawable/hqzx");
    add(item);
    item = new UICommand("page3");
    item.setCommandName("doNavigation");
    item.setAttribute(AttributeKeys.title,"大赛排行榜");
    item.setAttribute(AttributeKeys.icon,"resourceId:drawable/dsphb");
    add(item);
    item = new UICommand("page4");
    item.setCommandName("doNavigation");
    item.setAttribute(AttributeKeys.title,"帮助中心");
    item.setAttribute(AttributeKeys.icon,"resourceId:drawable/help");
    add(item);
    }
    
    private void initMenus() {
        this.leftMenu = new MenuBase("leftMenu");
        this.leftMenu.addCommand("home");
        this.leftMenu.addCommand("page1");
        this.leftMenu.addCommand("page2");
        this.leftMenu.addCommand("page3");
        this.leftMenu.addCommand("page4");
        add(this.leftMenu);

    }
    
    
    private void initViewGroups(){
        LazyLoadViewGroup vg = null;
        vg = new LazyLoadViewGroup("contents");
        vg.addViewId("tradingMain");
        vg.addViewId("tradingWinner");
        vg.addViewId("infoCenter");
        vg.addViewId("championShip");
        vg.addViewId("helpCenter");
        this.contents = vg;
        add(this.contents);
        
    }
    
    
    String menuClicked(InputEvent event)
    {
    if (InputEvent.EVENT_TYPE_ITEM_CLICK.equals(event.getEventType())) {
        String name = ((IUICommand)event.getProperty("ItemClicked")).getName();
        if (log.isDebugEnabled()) {
            log.debug("Menu item :" + name + " was clicked !");
        }
        if (leftMenu.isOnShow()) {
            leftMenu.hide();
        }
        return name;
    }
    return null;
}
    

}
