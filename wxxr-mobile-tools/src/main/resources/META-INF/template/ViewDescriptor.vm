/*
 * Generated code, don't modified !
 */
package ${model.pkgName};

import com.wxxr.mobile.android.ui.AndroidBindingType;
import com.wxxr.mobile.android.ui.IAndroidBindingDescriptor;
import com.wxxr.mobile.core.ui.api.IView;
import com.wxxr.mobile.core.ui.api.IWorkbench;
import com.wxxr.mobile.core.ui.api.IWorkbenchRTContext;
import com.wxxr.mobile.core.ui.api.TargetUISystem;
import com.wxxr.mobile.core.ui.common.AbstractViewDescriptor;
import com.wxxr.mobile.stock.client.ui.HomePage;
import ${model.viewModel.applicationId}.R;
#set( $clazz = ${model.addImport($model.viewModel.className)})
#set( $clazz = ${model.addImport($model.targetUI.className)})
#foreach($stmt in $model.imports)
import $stmt;
#end

/**
 * Generated by UI model generator
 *
 */
public class ${model.name} extends AbstractViewDescriptor {

	@Override
	protected IView createPModel(IWorkbenchRTContext ctx) {
		${model.viewModel.name} view= new ${model.viewModel.name}();
		view.setName(getViewId());
		return view;
	}

	@Override
	protected void init() {
		setViewId("${model.viewModel.id}");
#if(${model.viewModel.description})
		setViewDescription("${model.viewModel.description}");
#end
		addBindingDescriptor(TargetUISystem.ANDROID, new IAndroidBindingDescriptor() {
			
			@Override
			public String getBindingViewId() {
				return getViewId();
			}
			
			@Override
			public Class<?> getTargetClass() {
#if(${model.targetUI.name})
				return ${model.targetUI.name}.class; 
#else 
                return null;
#end
			}
			
			@Override
			public int getBindingLayoutId() {
				return ${model.layoutId};
			}

			@Override
			public AndroidBindingType getBindingType() {
				return AndroidBindingType.${model.bindingType};
			}
		});
	}

}
