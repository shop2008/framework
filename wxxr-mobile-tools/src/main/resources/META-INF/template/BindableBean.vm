/*
 * Generated code, don't modified !
 */
package ${model.pkgName};

#foreach($stmt in $model.imports)
import $stmt;
#end
import com.wxxr.mobile.core.bean.api.IBindableBean;
import com.wxxr.mobile.core.bean.api.IPropertyChangeListener;
import com.wxxr.mobile.core.ui.common.BindableBeanSupport;

/**
 * Generated by Bindable Bean generator
 *
 */
public class ${model.name} implements IBindableBean {
	
	private final BindableBeanSupport emitter = new BindableBeanSupport(this);
#foreach($fld in $model.fields)	
	private ${fld.type} ${fld.name};
#end		

	/**
	 * @param listener
	 */
	public void addPropertyChangeListener(IPropertyChangeListener listener) {
		emitter.addPropertyChangeListener(listener);
	}

	/**
	 * @param listener
	 */
	public void removePropertyChangeListener(IPropertyChangeListener listener) {
		emitter.removePropertyChangeListener(listener);
	}


#foreach($fld in $model.fields)

	/**
	 * @return the ${fld.name}
	 */
	public ${fld.type} get${helper.capitalize($fld.name)}() {
		return ${fld.name};
	}

	/**
	 * @param ${fld.name} the ${fld.name} to set
	 */
	public void set${helper.capitalize($fld.name)}($fld.type $fld.name) {
		$fld.type old = this.${fld.name};
		this.${fld.name} = $fld.name;
#if(${fld.decorated})
		if(this.${fld.name} != null){
            this.${fld.name} = new ${fld.decoratedType}("${fld.name}", this.emitter,this.${fld.name});
        }
#end		
		this.emitter.firePropertyChange("${fld.name}", old, this.${fld.name});
	}
#end

    /* (non-Javadoc)
     * @see java.lang.Object#toString()
     */
    @Override   
    public String toString() {
        return "$model.name ["+
#set( $count = 0 )
#foreach($fld in $model.fields)
#if( $count > 0 )
                " , ${fld.name}=" + this.${fld.name} +
#else
                "${fld.name}=" + this.${fld.name} +
#end
#set( $count = $count + 1 )
#end
        "]";
    }	

}
